[
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "baseColumnName": "physical_description",
        "expression": "grel:if(value.contains(';'), value.split(';')[0], value)",
        "onError": "set-to-blank",
        "newColumnName": "physical_types",
        "columnInsertIndex": 8,
        "description": "Create column physical_types at index 8 based on column physical_description using expression grel:if(value.contains(';'), value.split(';')[0], value)"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "flag_ph_type",
                    "expression": "value",
                    "columnName": "flag_ph_type",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": 0,
                                "l": "0"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "baseColumnName": "physical_types",
        "expression": "grel:if(value.contains('x'), 1, 0)",
        "onError": "set-to-blank",
        "newColumnName": "flag_pd_type",
        "columnInsertIndex": 9,
        "description": "Create column flag_pd_type at index 9 based on column physical_types using expression grel:if(value.contains('x'), 1, 0)"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "flag_pd_type",
                    "expression": "value",
                    "columnName": "flag_pd_type",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": 1,
                                "l": "1"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "physical_types",
        "expression": "jython:import re\n\npattern = r\"(folded|fold|open|opened)\"\nif re.search(pattern, value):\n   return \"Folder\"\nelse:\n   return None",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column physical_types using expression jython:import re\n\npattern = r\"(folded|fold|open|opened)\"\nif re.search(pattern, value):\n   return \"Folder\"\nelse:\n   return None"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "physical_types",
        "expression": "value.toUppercase()",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column physical_types using expression value.toUppercase()"
    },
    {
        "op": "core/column-removal",
        "columnName": "flag_pd_type",
        "description": "Remove column flag_pd_type"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "physical_types",
        "expression": "value.trim()",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column physical_types using expression value.trim()"
    },
    {
        "op": "core/mass-edit",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "physical_types",
                    "expression": "value",
                    "columnName": "physical_types",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "CARD FOLDER",
                                "l": "CARD FOLDER"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "physical_types",
        "expression": "value",
        "edits": [
            {
                "from": [
                    "CARD FOLDER"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "CARD"
            }
        ],
        "description": "Mass edit cells in column physical_types"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "physical_types",
        "expression": "value.toUppercase()",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column physical_types using expression value.toUppercase()"
    }
]