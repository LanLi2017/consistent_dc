[
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "name",
        "expression": "value.trim()",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column name using expression value.trim()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "name",
        "expression": "value.toUppercase()",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column name using expression value.toUppercase()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "name",
        "expression": "jython:import re\nmatch = re.search(r'\\s{2,}', value)\n\nif match:\n    result = re.sub(r'\\s{2,}', ' ',value)\n    return result\nelse:\n    return value",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column name using expression jython:import re\nmatch = re.search(r'\\s{2,}', value)\n\nif match:\n    result = re.sub(r'\\s{2,}', ' ',value)\n    return result\nelse:\n    return value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "name",
        "expression": "jython:import re\nif re.search(r'[\\[\\];\\.]', value):\n   return re.sub(r'[\\[\\];\\.]', '', value)\nelse:\n   return value",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column name using expression jython:import re\nif re.search(r'[\\[\\];\\.]', value):\n   return re.sub(r'[\\[\\];\\.]', '', value)\nelse:\n   return value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "highest_price",
        "expression": "value.toNumber()",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column highest_price using expression value.toNumber()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "name",
        "expression": "jython:import re\nvalue = re.sub(r\"[()]\", \"\", value)\nreturn value",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column name using expression jython:import re\nvalue = re.sub(r\"[()]\", \"\", value)\nreturn value"
    }
]