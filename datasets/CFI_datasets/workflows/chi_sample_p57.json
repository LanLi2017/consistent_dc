[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "DBA Name",
    "expression": "jython:import re\nreturn re.sub(r\"_\", \" \", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column DBA Name using expression jython:import re\nreturn re.sub(r\"_\", \" \", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "DBA Name",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column DBA Name using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "DBA Name",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column DBA Name using expression value.toUppercase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Risk",
    "expression": "jython:import re\nreturn re.sub(r\"_\", \" \", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Risk using expression jython:import re\nreturn re.sub(r\"_\", \" \", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Risk",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Risk using expression value.trim()"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Risk",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Risk 2 (Medium)",
          "risk 2 (medium)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Risk 2 (Medium)"
      }
    ],
    "description": "Mass edit cells in column Risk"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Risk",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Risk 1 (L0w)",
          "Risk 1 (Lwo)",
          "Risk 1 (loww)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Risk 1 (Low)"
      }
    ],
    "description": "Mass edit cells in column Risk"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Inspection Date",
    "expression": "jython:import re\nreturn re.sub(r\"_\", \" \", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Inspection Date using expression jython:import re\nreturn re.sub(r\"_\", \" \", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Inspection Date",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Inspection Date using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Inspection Date",
    "expression": "jython:import re\nif re.match(r\"^\\d{2}\\.\\d{2}\\.\\d{4}$\", value):\n   return value.replace('.', '/')\nelse:\n   return value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Inspection Date using expression jython:import re\nif re.match(r\"^\\d{2}\\.\\d{2}\\.\\d{4}$\", value):\n   return value.replace('.', '/')\nelse:\n   return value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Inspection Date",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Inspection Date using expression value.toDate()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Inspection Date",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Inspection Date using expression value.toString()"
  }
]