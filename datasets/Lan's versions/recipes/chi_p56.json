[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Results",
    "expression": "jython:import re\nreturn re.sub(r\"_\", \" \", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Results using expression jython:import re\nreturn re.sub(r\"_\", \" \", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Results",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Results using expression value.trim()"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Results",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Pass",
          "Pass w/ Conditions",
          "passs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pass"
      },
      {
        "from": [
          "Pass",
          "pas",
          "passs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pass"
      }
    ],
    "description": "Mass edit cells in column Results"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Results",
          "expression": "value",
          "columnName": "Results",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "faild",
                "l": "faild"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Results",
    "expression": "value",
    "edits": [
      {
        "from": [
          "faild"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "fail"
      }
    ],
    "description": "Mass edit cells in column Results"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Results",
          "expression": "value",
          "columnName": "Results",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "p@ss",
                "l": "p@ss"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Results",
    "expression": "value",
    "edits": [
      {
        "from": [
          "p@ss"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "pass"
      }
    ],
    "description": "Mass edit cells in column Results"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Results",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Results using expression value.toUppercase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "License #",
    "expression": "jython:import re\nif re.match(r\"^\\d{1,3}(,\\d{3})*$\", value):\n   return value.replace(',', '')\nelse:\n   return value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column License # using expression jython:import re\nif re.match(r\"^\\d{1,3}(,\\d{3})*$\", value):\n   return value.replace(',', '')\nelse:\n   return value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "License #",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column License # using expression value.toNumber()"
  }
]